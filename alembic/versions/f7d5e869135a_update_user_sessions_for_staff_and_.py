"""update user_sessions for staff and student support

Revision ID: f7d5e869135a
Revises: j3k4l5m6n7o8
Create Date: 2025-06-27 15:22:20.786418

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f7d5e869135a'
down_revision: Union[str, Sequence[str], None] = 'j3k4l5m6n7o8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('students', sa.Column('expo_push_token', sa.String(length=200), nullable=True))
    # Add approval_status column with default value first
    op.add_column('students', sa.Column('approval_status', sa.String(length=20), nullable=True))
    
    # Update existing records to have 'pending' as approval_status
    op.execute("UPDATE students SET approval_status = 'pending' WHERE approval_status IS NULL")
    
    # Now make it not nullable
    op.alter_column('students', 'approval_status', nullable=False)
    op.add_column('students', sa.Column('approved_by_staff_id', sa.UUID(), nullable=True))
    op.add_column('students', sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('students', sa.Column('rejection_reason', sa.String(length=500), nullable=True))
    op.create_index('idx_student_college_approval', 'students', ['college_id', 'approval_status'], unique=False)
    op.create_index('idx_student_college_roll', 'students', ['college_id', 'roll_number'], unique=True)
    op.create_index('idx_student_section_approval', 'students', ['section_id', 'approval_status'], unique=False)
    op.create_index(op.f('ix_students_approval_status'), 'students', ['approval_status'], unique=False)
    op.create_index(op.f('ix_students_expo_push_token'), 'students', ['expo_push_token'], unique=False)
    op.create_foreign_key(op.f('fk_students_approved_by_staff_id_staff'), 'students', 'staff', ['approved_by_staff_id'], ['staff_id'])
    op.add_column('user_sessions', sa.Column('student_id', sa.UUID(), nullable=True))
    # Add session_type column with default value first
    op.add_column('user_sessions', sa.Column('session_type', sa.String(length=20), nullable=True))
    
    # Update existing records to have 'staff' as session_type
    op.execute("UPDATE user_sessions SET session_type = 'staff' WHERE session_type IS NULL")
    
    # Now make it not nullable
    op.alter_column('user_sessions', 'session_type', nullable=False)
    
    op.alter_column('user_sessions', 'staff_id',
               existing_type=sa.UUID(),
               nullable=True)
    op.create_index(op.f('ix_user_sessions_student_id'), 'user_sessions', ['student_id'], unique=False)
    op.create_foreign_key(op.f('fk_user_sessions_student_id_students'), 'user_sessions', 'students', ['student_id'], ['student_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_user_sessions_student_id_students'), 'user_sessions', type_='foreignkey')
    op.drop_index(op.f('ix_user_sessions_student_id'), table_name='user_sessions')
    op.alter_column('user_sessions', 'staff_id',
               existing_type=sa.UUID(),
               nullable=False)
    op.drop_column('user_sessions', 'session_type')
    op.drop_column('user_sessions', 'student_id')
    op.drop_constraint(op.f('fk_students_approved_by_staff_id_staff'), 'students', type_='foreignkey')
    op.drop_index(op.f('ix_students_expo_push_token'), table_name='students')
    op.drop_index(op.f('ix_students_approval_status'), table_name='students')
    op.drop_index('idx_student_section_approval', table_name='students')
    op.drop_index('idx_student_college_roll', table_name='students')
    op.drop_index('idx_student_college_approval', table_name='students')
    op.drop_column('students', 'rejection_reason')
    op.drop_column('students', 'approved_at')
    op.drop_column('students', 'approved_by_staff_id')
    op.drop_column('students', 'approval_status')
    op.drop_column('students', 'expo_push_token')
    # ### end Alembic commands ###
