"""Initial migration with staff terminology and asyncpg

Revision ID: 11f4247f604f
Revises: 
Create Date: 2025-06-20 08:59:45.853778

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '11f4247f604f'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cms_email_otp',
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('otp', sa.Integer(), nullable=False),
    sa.Column('expiry', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cms_email_otp'))
    )
    op.create_index(op.f('ix_cms_email_otp_email'), 'cms_email_otp', ['email'], unique=False)
    op.create_index(op.f('ix_cms_email_otp_id'), 'cms_email_otp', ['id'], unique=False)
    op.create_table('colleges',
    sa.Column('uuid', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('short_name', sa.String(length=50), nullable=False),
    sa.Column('college_reference_id', sa.String(length=100), nullable=False),
    sa.Column('logo_url', sa.String(length=500), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('area', sa.String(length=255), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('district', sa.String(length=100), nullable=False),
    sa.Column('state', sa.String(length=100), nullable=False),
    sa.Column('pincode', sa.String(length=10), nullable=False),
    sa.Column('latitude', sa.DECIMAL(precision=10, scale=8), nullable=True),
    sa.Column('longitude', sa.DECIMAL(precision=11, scale=8), nullable=True),
    sa.Column('principal_cms_staff_id', sa.Integer(), nullable=True),
    sa.Column('auto_approved', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_colleges'))
    )
    op.create_index(op.f('ix_colleges_id'), 'colleges', ['id'], unique=False)
    op.create_index(op.f('ix_colleges_uuid'), 'colleges', ['uuid'], unique=True)
    op.create_table('departments',
    sa.Column('uuid', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('college_id', sa.Integer(), nullable=False),
    sa.Column('hod_staff_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['college_id'], ['colleges.id'], name=op.f('fk_departments_college_id_colleges')),
    # Note: hod_staff_id foreign key will be added after staff table is created
    sa.PrimaryKeyConstraint('id', name=op.f('pk_departments'))
    )
    op.create_index(op.f('ix_departments_id'), 'departments', ['id'], unique=False)
    op.create_index(op.f('ix_departments_uuid'), 'departments', ['uuid'], unique=True)
    op.create_table('staff',
    sa.Column('uuid', sa.UUID(), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('is_superstaff', sa.Boolean(), nullable=False),
    sa.Column('email_verified_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=False),
    sa.Column('college_id', sa.Integer(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('cms_role', sa.String(length=50), nullable=False),
    sa.Column('invitation_status', sa.String(length=50), nullable=False),
    sa.Column('temporary_password', sa.Boolean(), nullable=False),
    sa.Column('must_reset_password', sa.Boolean(), nullable=False),
    sa.Column('can_assign_department', sa.Boolean(), nullable=False),
    sa.Column('invited_by_staff_id', sa.Integer(), nullable=True),
    sa.Column('is_hod', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['college_id'], ['colleges.id'], name=op.f('fk_staff_college_id_colleges')),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], name=op.f('fk_staff_department_id_departments')),
    sa.ForeignKeyConstraint(['invited_by_staff_id'], ['staff.id'], name=op.f('fk_staff_invited_by_staff_id_staff')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_staff'))
    )
    op.create_index(op.f('ix_staff_email'), 'staff', ['email'], unique=True)
    op.create_index(op.f('ix_staff_id'), 'staff', ['id'], unique=False)
    op.create_index(op.f('ix_staff_uuid'), 'staff', ['uuid'], unique=True)
    op.create_table('cms_staff_permissions',
    sa.Column('cms_staff_id', sa.Integer(), nullable=False),
    sa.Column('module', sa.String(length=50), nullable=False),
    sa.Column('read_access', sa.Boolean(), nullable=False),
    sa.Column('write_access', sa.Boolean(), nullable=False),
    sa.Column('scope', sa.String(length=50), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['cms_staff_id'], ['staff.id'], name=op.f('fk_cms_staff_permissions_cms_staff_id_staff')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cms_staff_permissions')),
    sa.UniqueConstraint('cms_staff_id', 'module', name='unique_staff_module_permission')
    )
    op.create_index(op.f('ix_cms_staff_permissions_id'), 'cms_staff_permissions', ['id'], unique=False)
    
    # Add foreign key constraints that were deferred due to circular dependencies
    op.create_foreign_key(op.f('fk_departments_hod_staff_id_staff'), 'departments', 'staff', ['hod_staff_id'], ['id'])
    op.create_foreign_key(op.f('fk_colleges_principal_cms_staff_id_staff'), 'colleges', 'staff', ['principal_cms_staff_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop foreign key constraints that were added to handle circular dependencies
    op.drop_constraint(op.f('fk_colleges_principal_cms_staff_id_staff'), 'colleges', type_='foreignkey')
    op.drop_constraint(op.f('fk_departments_hod_staff_id_staff'), 'departments', type_='foreignkey')
    
    op.drop_index(op.f('ix_cms_staff_permissions_id'), table_name='cms_staff_permissions')
    op.drop_table('cms_staff_permissions')
    op.drop_index(op.f('ix_staff_uuid'), table_name='staff')
    op.drop_index(op.f('ix_staff_id'), table_name='staff')
    op.drop_index(op.f('ix_staff_email'), table_name='staff')
    op.drop_table('staff')
    op.drop_index(op.f('ix_departments_uuid'), table_name='departments')
    op.drop_index(op.f('ix_departments_id'), table_name='departments')
    op.drop_table('departments')
    op.drop_index(op.f('ix_colleges_uuid'), table_name='colleges')
    op.drop_index(op.f('ix_colleges_id'), table_name='colleges')
    op.drop_table('colleges')
    op.drop_index(op.f('ix_cms_email_otp_id'), table_name='cms_email_otp')
    op.drop_index(op.f('ix_cms_email_otp_email'), table_name='cms_email_otp')
    op.drop_table('cms_email_otp')
    # ### end Alembic commands ###
