"""Initial database schema

Revision ID: 084b90883054
Revises: 
Create Date: 2025-06-12 14:10:45.004601

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '084b90883054'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cms_companies',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('website', sa.String(length=255), nullable=True),
    sa.Column('industry', sa.String(length=100), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.BigInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cms_system_modules',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('display_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_core', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.BigInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('colleges',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('college_id', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('short_name', sa.String(length=10), nullable=False),
    sa.Column('logo_url', sa.Text(), nullable=True),
    sa.Column('affiliated_university_name', sa.String(length=255), nullable=True),
    sa.Column('affiliated_university_short', sa.String(length=50), nullable=True),
    sa.Column('university_id', sa.String(length=50), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('district', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=100), nullable=True),
    sa.Column('pincode', sa.String(length=10), nullable=True),
    sa.Column('latitude', sa.DECIMAL(precision=10, scale=8), nullable=True),
    sa.Column('longitude', sa.DECIMAL(precision=11, scale=8), nullable=True),
    sa.Column('total_locations', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.BigInteger(), nullable=False),
    sa.Column('updated_at', sa.BigInteger(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_colleges_college_id'), 'colleges', ['college_id'], unique=True)
    op.create_index(op.f('ix_colleges_id'), 'colleges', ['id'], unique=False)
    op.create_table('cms_college_modules',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('college_id', sa.UUID(), nullable=False),
    sa.Column('module_id', sa.UUID(), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=True),
    sa.Column('configured_at', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['college_id'], ['colleges.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['module_id'], ['cms_system_modules.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cms_college_settings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('college_id', sa.UUID(), nullable=False),
    sa.Column('setting_key', sa.String(length=100), nullable=False),
    sa.Column('setting_value', sa.Text(), nullable=True),
    sa.Column('data_type', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.BigInteger(), nullable=False),
    sa.Column('updated_at', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['college_id'], ['colleges.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cms_examinations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('college_id', sa.UUID(), nullable=False),
    sa.Column('exam_name', sa.String(length=255), nullable=False),
    sa.Column('exam_type', sa.String(length=50), nullable=True),
    sa.Column('academic_year', sa.Integer(), nullable=True),
    sa.Column('semester', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['college_id'], ['colleges.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cms_placement_drives',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('college_id', sa.UUID(), nullable=False),
    sa.Column('company_id', sa.UUID(), nullable=False),
    sa.Column('position_title', sa.String(length=255), nullable=False),
    sa.Column('job_description', sa.Text(), nullable=True),
    sa.Column('eligibility_criteria', sa.Text(), nullable=True),
    sa.Column('package_offered', sa.String(length=100), nullable=True),
    sa.Column('drive_date', sa.Date(), nullable=True),
    sa.Column('application_deadline', sa.Date(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['college_id'], ['colleges.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['company_id'], ['cms_companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('college_locations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('college_id', sa.UUID(), nullable=False),
    sa.Column('location_name', sa.String(length=100), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('district', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=100), nullable=True),
    sa.Column('pincode', sa.String(length=10), nullable=True),
    sa.Column('latitude', sa.DECIMAL(precision=10, scale=8), nullable=True),
    sa.Column('longitude', sa.DECIMAL(precision=11, scale=8), nullable=True),
    sa.Column('is_main_campus', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['college_id'], ['colleges.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('degrees',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('college_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('duration_years', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['college_id'], ['colleges.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('departments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('college_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('short_name', sa.String(length=10), nullable=True),
    sa.Column('head_name', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['college_id'], ['colleges.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('branches',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('department_id', sa.UUID(), nullable=False),
    sa.Column('degree_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('code', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['degree_id'], ['degrees.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cms_users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('college_id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('role', postgresql.ENUM('super_admin', 'department_admin', 'lecturer', 'staff_admin', name='cms_user_role'), nullable=False),
    sa.Column('department_id', sa.UUID(), nullable=True),
    sa.Column('branch_id', sa.UUID(), nullable=True),
    sa.Column('degree_id', sa.UUID(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('email_verified', sa.Boolean(), nullable=True),
    sa.Column('last_login', sa.BigInteger(), nullable=True),
    sa.Column('created_at', sa.BigInteger(), nullable=False),
    sa.Column('updated_at', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['branch_id'], ['branches.id'], ),
    sa.ForeignKeyConstraint(['college_id'], ['colleges.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['degree_id'], ['degrees.id'], ),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_cms_users_email'), 'cms_users', ['email'], unique=True)
    op.create_index(op.f('ix_cms_users_id'), 'cms_users', ['id'], unique=False)
    op.create_table('student_users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('college_id', sa.UUID(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('role', postgresql.ENUM('student', name='student_user_role'), nullable=True),
    sa.Column('student_id', sa.String(length=50), nullable=False),
    sa.Column('roll_number', sa.String(length=50), nullable=True),
    sa.Column('admission_number', sa.String(length=50), nullable=True),
    sa.Column('department_id', sa.UUID(), nullable=True),
    sa.Column('branch_id', sa.UUID(), nullable=True),
    sa.Column('degree_id', sa.UUID(), nullable=True),
    sa.Column('batch_year', sa.Integer(), nullable=True),
    sa.Column('current_semester', sa.Integer(), nullable=True),
    sa.Column('admission_date', sa.Date(), nullable=True),
    sa.Column('graduation_date', sa.Date(), nullable=True),
    sa.Column('profile_image_url', sa.Text(), nullable=True),
    sa.Column('guardian_name', sa.String(length=255), nullable=True),
    sa.Column('guardian_phone', sa.String(length=20), nullable=True),
    sa.Column('emergency_contact', sa.String(length=20), nullable=True),
    sa.Column('blood_group', sa.String(length=5), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('gender', sa.String(length=10), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('email_verified', sa.Boolean(), nullable=True),
    sa.Column('last_login', sa.BigInteger(), nullable=True),
    sa.Column('created_at', sa.BigInteger(), nullable=False),
    sa.Column('updated_at', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['branch_id'], ['branches.id'], ),
    sa.ForeignKeyConstraint(['college_id'], ['colleges.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['degree_id'], ['degrees.id'], ),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('student_id'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_student_users_email'), 'student_users', ['email'], unique=True)
    op.create_index(op.f('ix_student_users_id'), 'student_users', ['id'], unique=False)
    op.create_table('subjects',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('college_id', sa.UUID(), nullable=False),
    sa.Column('branch_id', sa.UUID(), nullable=True),
    sa.Column('subject_code', sa.String(length=20), nullable=False),
    sa.Column('subject_name', sa.String(length=255), nullable=False),
    sa.Column('semester', sa.Integer(), nullable=True),
    sa.Column('credits', sa.Integer(), nullable=True),
    sa.Column('is_core', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['branch_id'], ['branches.id'], ),
    sa.ForeignKeyConstraint(['college_id'], ['colleges.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cms_assignments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('college_id', sa.UUID(), nullable=False),
    sa.Column('subject_id', sa.UUID(), nullable=False),
    sa.Column('faculty_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('assignment_type', sa.String(length=50), nullable=True),
    sa.Column('due_date', sa.BigInteger(), nullable=True),
    sa.Column('max_marks', sa.Integer(), nullable=True),
    sa.Column('status', postgresql.ENUM('draft', 'published', 'closed', name='cms_assignment_status'), nullable=True),
    sa.Column('created_at', sa.BigInteger(), nullable=False),
    sa.Column('updated_at', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['college_id'], ['colleges.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['faculty_id'], ['cms_users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cms_attendance_sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('college_id', sa.UUID(), nullable=False),
    sa.Column('subject_id', sa.UUID(), nullable=False),
    sa.Column('faculty_id', sa.UUID(), nullable=False),
    sa.Column('branch_id', sa.UUID(), nullable=True),
    sa.Column('semester', sa.Integer(), nullable=True),
    sa.Column('session_date', sa.Date(), nullable=False),
    sa.Column('session_time', sa.Time(), nullable=True),
    sa.Column('session_type', sa.String(length=50), nullable=True),
    sa.Column('total_classes', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['branch_id'], ['branches.id'], ),
    sa.ForeignKeyConstraint(['college_id'], ['colleges.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['faculty_id'], ['cms_users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cms_document_requests',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('college_id', sa.UUID(), nullable=False),
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('document_type', sa.String(length=100), nullable=False),
    sa.Column('purpose', sa.String(length=255), nullable=True),
    sa.Column('status', postgresql.ENUM('pending', 'processing', 'ready', 'delivered', 'rejected', name='cms_document_status'), nullable=True),
    sa.Column('requested_date', sa.Date(), nullable=True),
    sa.Column('expected_delivery', sa.Date(), nullable=True),
    sa.Column('processed_by', sa.UUID(), nullable=True),
    sa.Column('remarks', sa.Text(), nullable=True),
    sa.Column('created_at', sa.BigInteger(), nullable=False),
    sa.Column('updated_at', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['college_id'], ['colleges.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['processed_by'], ['cms_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cms_events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('college_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('event_type', postgresql.ENUM('academic', 'cultural', 'sports', 'placement', 'seminar', 'workshop', name='cms_event_type'), nullable=True),
    sa.Column('start_datetime', sa.BigInteger(), nullable=True),
    sa.Column('end_datetime', sa.BigInteger(), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('organizer_id', sa.UUID(), nullable=True),
    sa.Column('max_participants', sa.Integer(), nullable=True),
    sa.Column('registration_required', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['college_id'], ['colleges.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['organizer_id'], ['cms_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cms_faculty_subject_assignments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('subject_id', sa.UUID(), nullable=False),
    sa.Column('academic_year', sa.Integer(), nullable=True),
    sa.Column('semester', sa.Integer(), nullable=True),
    sa.Column('assigned_date', sa.Date(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['cms_users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cms_notifications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('college_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('notification_type', postgresql.ENUM('info', 'warning', 'success', 'error', name='cms_notification_type'), nullable=True),
    sa.Column('target_audience', postgresql.ENUM('all', 'students', 'faculty', 'department', 'branch', name='cms_notification_target'), nullable=True),
    sa.Column('department_id', sa.UUID(), nullable=True),
    sa.Column('branch_id', sa.UUID(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('expires_at', sa.BigInteger(), nullable=True),
    sa.Column('created_at', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['branch_id'], ['branches.id'], ),
    sa.ForeignKeyConstraint(['college_id'], ['colleges.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['created_by'], ['cms_users.id'], ),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cms_timetable_slots',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('college_id', sa.UUID(), nullable=False),
    sa.Column('branch_id', sa.UUID(), nullable=True),
    sa.Column('subject_id', sa.UUID(), nullable=True),
    sa.Column('faculty_id', sa.UUID(), nullable=True),
    sa.Column('semester', sa.Integer(), nullable=True),
    sa.Column('day_of_week', postgresql.ENUM('monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday', name='cms_day_of_week'), nullable=True),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('room_number', sa.String(length=50), nullable=True),
    sa.Column('academic_year', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['branch_id'], ['branches.id'], ),
    sa.ForeignKeyConstraint(['college_id'], ['colleges.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['faculty_id'], ['cms_users.id'], ),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cms_user_module_permissions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('module_id', sa.UUID(), nullable=False),
    sa.Column('has_access', sa.Boolean(), nullable=True),
    sa.Column('granted_at', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['module_id'], ['cms_system_modules.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['cms_users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_dashboard_view',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('total_attendance_percentage', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('pending_assignments', sa.Integer(), nullable=True),
    sa.Column('upcoming_events', sa.Integer(), nullable=True),
    sa.Column('unread_notifications', sa.Integer(), nullable=True),
    sa.Column('current_semester_gpa', sa.DECIMAL(precision=4, scale=2), nullable=True),
    sa.Column('last_updated', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['student_users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_placements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('placement_drive_id', sa.UUID(), nullable=False),
    sa.Column('application_date', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('interview_date', sa.Date(), nullable=True),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.Column('updated_at', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['placement_drive_id'], ['cms_placement_drives.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student_id'], ['student_users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_results',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('examination_id', sa.UUID(), nullable=False),
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('subject_id', sa.UUID(), nullable=False),
    sa.Column('marks_obtained', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('max_marks', sa.DECIMAL(precision=5, scale=2), nullable=True),
    sa.Column('grade', sa.String(length=5), nullable=True),
    sa.Column('is_pass', sa.Boolean(), nullable=True),
    sa.Column('remarks', sa.Text(), nullable=True),
    sa.Column('created_at', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['examination_id'], ['cms_examinations.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student_id'], ['student_users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['subject_id'], ['subjects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_assignment_submissions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('assignment_id', sa.UUID(), nullable=False),
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('submission_text', sa.Text(), nullable=True),
    sa.Column('file_urls', sa.JSON(), nullable=True),
    sa.Column('submitted_at', sa.BigInteger(), nullable=False),
    sa.Column('marks_awarded', sa.Integer(), nullable=True),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.Column('graded_by', sa.UUID(), nullable=True),
    sa.Column('graded_at', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['assignment_id'], ['cms_assignments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['graded_by'], ['cms_users.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student_users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_attendance',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('is_present', sa.Boolean(), nullable=False),
    sa.Column('marked_at', sa.BigInteger(), nullable=False),
    sa.Column('marked_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['marked_by'], ['cms_users.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['cms_attendance_sessions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student_id'], ['student_users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_event_registrations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('event_id', sa.UUID(), nullable=False),
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('registration_date', sa.Date(), nullable=True),
    sa.Column('attendance_status', sa.String(length=20), nullable=True),
    sa.Column('remarks', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['event_id'], ['cms_events.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student_id'], ['student_users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_notifications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('notification_id', sa.UUID(), nullable=False),
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('read_at', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['notification_id'], ['cms_notifications.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['student_id'], ['student_users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_timetable_preferences',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('timetable_slot_id', sa.UUID(), nullable=False),
    sa.Column('is_bookmarked', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['student_id'], ['student_users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['timetable_slot_id'], ['cms_timetable_slots.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('student_timetable_preferences')
    op.drop_table('student_notifications')
    op.drop_table('student_event_registrations')
    op.drop_table('student_attendance')
    op.drop_table('student_assignment_submissions')
    op.drop_table('student_results')
    op.drop_table('student_placements')
    op.drop_table('student_dashboard_view')
    op.drop_table('cms_user_module_permissions')
    op.drop_table('cms_timetable_slots')
    op.drop_table('cms_notifications')
    op.drop_table('cms_faculty_subject_assignments')
    op.drop_table('cms_events')
    op.drop_table('cms_document_requests')
    op.drop_table('cms_attendance_sessions')
    op.drop_table('cms_assignments')
    op.drop_table('subjects')
    op.drop_index(op.f('ix_student_users_id'), table_name='student_users')
    op.drop_index(op.f('ix_student_users_email'), table_name='student_users')
    op.drop_table('student_users')
    op.drop_index(op.f('ix_cms_users_id'), table_name='cms_users')
    op.drop_index(op.f('ix_cms_users_email'), table_name='cms_users')
    op.drop_table('cms_users')
    op.drop_table('branches')
    op.drop_table('departments')
    op.drop_table('degrees')
    op.drop_table('college_locations')
    op.drop_table('cms_placement_drives')
    op.drop_table('cms_examinations')
    op.drop_table('cms_college_settings')
    op.drop_table('cms_college_modules')
    op.drop_index(op.f('ix_colleges_id'), table_name='colleges')
    op.drop_index(op.f('ix_colleges_college_id'), table_name='colleges')
    op.drop_table('colleges')
    op.drop_table('cms_system_modules')
    op.drop_table('cms_companies')
    # ### end Alembic commands ###